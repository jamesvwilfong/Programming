import java.util.ArrayList;
import java.util.Collections;

import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Creates an HTML file for each term within the file provided by the user. The
 * generated HTML files are saved to a folder designated by the user. The
 * Glossary displays the terms in an alphabetical list. The page for each term
 * gives it's definition, and access to any terms used within that definition.
 *
 * @author James Wilfong
 *
 */
public final class Glossary {

    /**
     * Private constructor so this utility class cannot be instantiated.
     */
    private Glossary() {
    }

    /**
     * Outputs the HTML for each term. These are the expected elements generated
     * by this method:
     *
     * <html> <head> <title>the name of the term as the page title</title>
     * </head> <body>
     * <h1><font color = "red"><i>the name of the term as the
     * header</i></font></h1>
     * <p>
     * the definition of the term
     * </p>
     * <hr>
     * </hr>
     * <p>
     * Return to <a href="Main.html">Index</a>
     * </p>
     * </body> </html>
     *
     * @param fileName
     *            the name of the file that the user provided with the terms and
     *            their definitions
     * @param outputFolder
     *            the name of the folder that the HTML file will be saved in
     * @param term
     *            the name of the term that the HTML is file is being written
     *            for
     */
    private static void termPage(String fileName, String outputFolder,
            String term) {

        //constructs 2 copies of the file given by the user with the terms
        //and their definitions
        SimpleReader file = new SimpleReader1L(fileName);
        SimpleReader file2 = new SimpleReader1L(fileName);

        //one copy of the file provided by the user with the terms and their
        //definitions is used to construct an ArrayList of only the terms
        ArrayList<String> termList = new ArrayList<String>();
        while (!file2.atEOS()) {
            String word = file2.nextLine();
            termList.add(word);
            while (!file2.nextLine().isEmpty()) {
                //do nothing, simply making it's way to the next term
            }
        }

        //creates the HTML page for this term
        SimpleWriter termPage = new SimpleWriter1L(
                outputFolder + "/" + term + ".html");

        //creates the header of the HTML page
        termPage.println("<html>\n<head>\n<title>" + term + "</title>");
        termPage.println("</head>\n<body>\n<h1><font color = \"red\"><i>" + term
                + "</i></font></h1>\n<p>");

        //uses the other copy of the file provided by the user with the terms and
        //their definitions to access the term's definition, and write it to the
        //HTML page
        while (!file.atEOS()) {
            String term1 = file.nextLine();
            if (term1.equals(term)) {
                String definition = file.nextLine();
                //accounts for definitions with multiple lines
                while (!definition.isEmpty()) {
                    //uses the ArrayList of terms to replace any terms found within
                    //the definition with a hyperlink to that term's HTML page
                    for (int i = 0; i < termList.size(); i++) {
                        definition = definition.replaceAll(termList.get(i),
                                "<a href=\"" + termList.get(i) + ".html\">"
                                        + termList.get(i) + "</a>");
                    }
                    termPage.println(definition);
                    definition = file.nextLine();
                }
            }
        }

        //includes a hyperlink back to the index page of the Glossary on this
        //term's HTML page
        termPage.println("</p>\n<hr></hr>\n<p>Return to "
                + "<a href=\"Index.html\">Index</a>\n</p>\n</body>\n</html>");

        termPage.close();
        file.close();
        file2.close();
    }

    /**
     * Outputs the list of terms in the Index HTML file. These are the expected
     * elements generated by this method:
     *
     * <li><a href="book.html">book</a></li>
     * <li><a href="definition.html">definition</a></li>
     * <li><a href="glossary.html">glossary</a></li>
     * <li><a href="language.html">language</a></li>
     * <li><a href="meaning.html">meaning</a></li>
     * <li><a href="term.html">term</a></li>
     * <li><a href="word.html">word</a></li>
     *
     * @param outputFolder
     *            the name of the folder that the HTML file will be saved in the
     * @param fileName
     *            the name of the file that the user provided with the terms and
     *            their definitions
     * @updates glossary.content
     * @requires glossary.is_open
     * @ensures glossary.content = #glossary.content * [the HTML "list of
     *          terms"]
     */
    private static void termList(String outputFolder, String fileName,
            SimpleWriter index) {

        SimpleReader file = new SimpleReader1L(fileName);

        //constructs an arrayList of only the terms found in the file given by
        //the user of the terms and their definitions
        ArrayList<String> termList = new ArrayList<String>();
        while (!file.atEOS()) {
            String term = file.nextLine();
            //creates the HTML page for each term
            termPage(fileName, outputFolder, term);
            termList.add(term);
            while (!file.nextLine().isEmpty()) {
                //do nothing, simply moves on to the next term
            }
        }

        //sorts the ArrayList of terms in alphabetical order
        Collections.sort(termList);

        //creates the list of terms on the HTML page of the index
        for (int i = 0; i < termList.size(); i++) {
            index.println("<li><a href=\"" + termList.get(i) + ".html\">"
                    + termList.get(i) + "</a></li>");
        }

        file.close();
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        SimpleReader in = new SimpleReader1L();

        // writes to the console
        SimpleWriter console = new SimpleWriter1L();

        //prompts user for file of terms and their definitions
        console.println("Input File Name: ");
        String fileName = in.nextLine();

        //prompts user for the folder that they want the HTML files saved in
        console.println("Output folder name: ");
        String outputFolder = in.nextLine();

        //writes to the index HTML page
        SimpleWriter index = new SimpleWriter1L(outputFolder + "/Index.html");

        //creates the header on the Index HTML page
        index.println("<html>\n<head>\n<title>" + "Glossary" + "</title>");
        index.println("</head>\n<body>\n<h1>" + "Glossary"
                + "</h1>\n<hr></hr>\n<h3>Index</h3>\n<ul>");

        //creates the list of terms on the Index HTML page
        termList(outputFolder, fileName, index);

        index.println("</ul>\n</body>\n</html>");

        in.close();
        console.close();
        index.close();
    }

}
